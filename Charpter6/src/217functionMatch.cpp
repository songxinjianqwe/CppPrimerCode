//函数匹配
//Step1:得到候选函数（与被调用的函数重名；声明在调用点可见）
//Step2:得到可行函数（形参与本次调用提供的实参相等（或者考虑到默认实参后相等）；实参的类型和对应的形参类型相同，或能进行转换）
//Step3:寻找最佳匹配（该函数每个实参的匹配都不劣于其他可行函数需要的匹配，并且至少有一个实参的匹配优于其他可行函数提供的匹配）
//如果各有优劣，那么这个调用具有二义性，编译器将报错。
//
//如何确定优劣？
//从优至劣划分
//1.精确匹配（实参形参类型相同；实参从数组或函数转为指针类型；不考虑顶层const）
//2.通过const转换实现的匹配（底层const）
//3.通过类型提升实现的匹配（short->int）
//4.通过算术类型转换实现的匹配（double ->int）
//5.通过类类型转换实现的匹配
