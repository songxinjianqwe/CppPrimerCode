/*
 * 540abstractbaseclass.cpp
 *
 *  Created on: 2016年9月23日
 *      Author: songx
 */

#include <DiskQuote.h>

using namespace std;

//使用抽象基类
//书店要求定义不同的折扣策略：比如购买量超过一定数量享受折扣；购买量不超过某个限额可以享受折扣
//每个策略都要求一个购买量的值和一个折扣值
//可以定义一个DiskQuote类，支持不同的折扣策略
//它负责保存购买量的值和止口
//其他表示某种具体折扣的类比如BulkQuote将继承自DiskQuote
//我们可以不在DiskQuote类中定义netPrice，因为它是一个抽象的，没有具体策略


//如果我们不想创建某个类的对象，可以设置它的某个函数为纯虚函数，这样就无法创建这个类的对象了（类似java中的接口）
//将纯虚函数声明的右侧加上一个=0，就表示它是一个纯虚函数，注意=0只能出现在类内部的虚函数声明语句处
//我们也可以为纯虚函数提供定义，但函数体必须定义在类的外部
//含有纯虚函数的类是抽象基类
//抽象基类负责定义接口，后续的其他类可以覆盖该接口。
//我们不能直接创建一个抽象基类的对象，因为抽象基类中定义了纯虚函数。
//继承抽象基类的类必须给出自己的纯虚函数定义，否则他们也是抽象基类

void test5(){
//	DiskQuote dq;
	//cannot declare variable 'dq' to be of abstract type 'DiskQuote'
}



